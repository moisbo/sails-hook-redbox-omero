"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var index_1 = require("ts-smart-logger/index");
var TranslateI18NextLanguagesSupport = (function () {
    function TranslateI18NextLanguagesSupport(locale) {
        this.locale = locale;
    }
    TranslateI18NextLanguagesSupport.prototype.getSupportedLanguage = function (supportedLanguages) {
        var _this = this;
        var currentLocale = this.locale;
        if (this.isLangSupported(currentLocale, supportedLanguages)) {
            return currentLocale;
        }
        TranslateI18NextLanguagesSupport.logger.debug("[$SupportedLanguageHelper][getSupportedLanguage]: The language '" + currentLocale + "' is not supported, therefore we try to select as close as possible");
        var resultLng = currentLocale;
        currentLocale.toLowerCase()
            .split("-")
            .reverse()
            .forEach(function (lng) {
            if (_this.isLangSupported(lng, supportedLanguages)) {
                TranslateI18NextLanguagesSupport.logger.debug("[$SupportedLanguageHelper][getSupportedLanguage]: We have found closely supported language '" + lng + "'");
                resultLng = lng;
            }
        });
        return resultLng;
    };
    TranslateI18NextLanguagesSupport.prototype.isLangSupported = function (lng, supportedLanguages) {
        return !Array.isArray(supportedLanguages) ||
            (Array.isArray(supportedLanguages) && supportedLanguages.indexOf(lng) > -1);
    };
    return TranslateI18NextLanguagesSupport;
}());
TranslateI18NextLanguagesSupport.logger = index_1.LoggerFactory.makeLogger(TranslateI18NextLanguagesSupport);
TranslateI18NextLanguagesSupport.decorators = [
    { type: core_1.Injectable },
];
/** @nocollapse */
TranslateI18NextLanguagesSupport.ctorParameters = function () { return [
    { type: undefined, decorators: [{ type: core_1.Inject, args: [core_1.LOCALE_ID,] },] },
]; };
exports.TranslateI18NextLanguagesSupport = TranslateI18NextLanguagesSupport;
//# sourceMappingURL=TranslateI18NextLanguageDetector.js.map