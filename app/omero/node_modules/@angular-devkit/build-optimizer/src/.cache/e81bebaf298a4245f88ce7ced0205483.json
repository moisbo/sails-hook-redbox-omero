{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/StatusBar/StatusBar.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/StatusBar/StatusBar.js","mtime":1521677675000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var throttle = require('lodash.throttle');\n\nvar _require = require('preact'),\n    h = _require.h;\n\nfunction progressDetails(props) {\n  return h(\n    'span',\n    null,\n    props.totalProgress || 0,\n    '%\\u30FB',\n    props.complete,\n    ' / ',\n    props.inProgress,\n    '\\u30FB',\n    props.totalUploadedSize,\n    ' / ',\n    props.totalSize,\n    '\\u30FB\\u2191 ',\n    props.totalSpeed,\n    '/s\\u30FB',\n    props.totalETA\n  );\n}\n\nvar ThrottledProgressDetails = throttle(progressDetails, 500, { leading: true, trailing: true });\n\nvar STATE_ERROR = 'error';\nvar STATE_WAITING = 'waiting';\nvar STATE_PREPROCESSING = 'preprocessing';\nvar STATE_UPLOADING = 'uploading';\nvar STATE_POSTPROCESSING = 'postprocessing';\nvar STATE_COMPLETE = 'complete';\n\nfunction getUploadingState(props, files) {\n  if (props.isAllErrored) {\n    return STATE_ERROR;\n  }\n\n  // If ALL files have been completed, show the completed state.\n  if (props.isAllComplete) {\n    return STATE_COMPLETE;\n  }\n\n  var state = STATE_WAITING;\n  var fileIDs = Object.keys(files);\n  for (var i = 0; i < fileIDs.length; i++) {\n    var progress = files[fileIDs[i]].progress;\n    // If ANY files are being uploaded right now, show the uploading state.\n    if (progress.uploadStarted && !progress.uploadComplete) {\n      return STATE_UPLOADING;\n    }\n    // If files are being preprocessed AND postprocessed at this time, we show the\n    // preprocess state. If any files are being uploaded we show uploading.\n    if (progress.preprocess && state !== STATE_UPLOADING) {\n      state = STATE_PREPROCESSING;\n    }\n    // If NO files are being preprocessed or uploaded right now, but some files are\n    // being postprocessed, show the postprocess state.\n    if (progress.postprocess && state !== STATE_UPLOADING && state !== STATE_PREPROCESSING) {\n      state = STATE_POSTPROCESSING;\n    }\n  }\n  return state;\n}\n\nfunction calculateProcessingProgress(files) {\n  // Collect pre or postprocessing progress states.\n  var progresses = [];\n  Object.keys(files).forEach(function (fileID) {\n    var progress = files[fileID].progress;\n\n    if (progress.preprocess) {\n      progresses.push(progress.preprocess);\n    }\n    if (progress.postprocess) {\n      progresses.push(progress.postprocess);\n    }\n  });\n\n  // In the future we should probably do this differently. For now we'll take the\n  // mode and message from the first fileâ€¦\n  var _progresses$ = progresses[0],\n      mode = _progresses$.mode,\n      message = _progresses$.message;\n\n  var value = progresses.filter(isDeterminate).reduce(function (total, progress, index, all) {\n    return total + progress.value / all.length;\n  }, 0);\n  function isDeterminate(progress) {\n    return progress.mode === 'determinate';\n  }\n\n  return {\n    mode: mode,\n    message: message,\n    value: value\n  };\n}\n\nfunction togglePauseResume(props) {\n  if (props.isAllComplete) return;\n\n  if (!props.resumableUploads) {\n    return props.cancelAll();\n  }\n\n  if (props.isAllPaused) {\n    return props.resumeAll();\n  }\n\n  return props.pauseAll();\n}\n\nmodule.exports = function (props) {\n  props = props || {};\n\n  var uploadState = getUploadingState(props, props.files || {});\n\n  var progressValue = props.totalProgress;\n  var progressMode = void 0;\n  var progressBarContent = void 0;\n  if (uploadState === STATE_PREPROCESSING || uploadState === STATE_POSTPROCESSING) {\n    var progress = calculateProcessingProgress(props.files);\n    progressMode = progress.mode;\n    if (progressMode === 'determinate') {\n      progressValue = progress.value * 100;\n    }\n\n    progressBarContent = ProgressBarProcessing(progress);\n  } else if (uploadState === STATE_COMPLETE) {\n    progressBarContent = ProgressBarComplete(props);\n  } else if (uploadState === STATE_UPLOADING) {\n    progressBarContent = ProgressBarUploading(props);\n  } else if (uploadState === STATE_ERROR) {\n    progressValue = undefined;\n    progressBarContent = ProgressBarError(props);\n  }\n\n  var width = typeof progressValue === 'number' ? progressValue : 100;\n  var isHidden = uploadState === STATE_WAITING && props.hideUploadButton || uploadState === STATE_WAITING && !props.newFiles > 0 || uploadState === STATE_COMPLETE && props.hideAfterFinish;\n\n  var progressClasses = 'uppy-StatusBar-progress\\n                           ' + (progressMode ? 'is-' + progressMode : '');\n\n  return h(\n    'div',\n    { 'class': 'uppy uppy-StatusBar is-' + uploadState, 'aria-hidden': isHidden },\n    h('div', { 'class': progressClasses,\n      style: { width: width + '%' },\n      role: 'progressbar',\n      'aria-valuemin': '0',\n      'aria-valuemax': '100',\n      'aria-valuenow': progressValue }),\n    progressBarContent,\n    h(\n      'div',\n      { 'class': 'uppy-StatusBar-actions' },\n      props.newFiles && !props.hideUploadButton ? h(UploadBtn, props) : null,\n      props.error ? h(RetryBtn, props) : null\n    )\n  );\n};\n\nvar UploadBtn = function UploadBtn(props) {\n  return h(\n    'button',\n    { type: 'button',\n      'class': 'uppy-StatusBar-actionBtn uppy-StatusBar-actionBtn--upload',\n      'aria-label': props.i18n('uploadXFiles', { smart_count: props.newFiles }),\n      onclick: props.startUpload },\n    props.inProgress ? props.i18n('uploadXNewFiles', { smart_count: props.newFiles }) : props.i18n('uploadXFiles', { smart_count: props.newFiles })\n  );\n};\n\nvar RetryBtn = function RetryBtn(props) {\n  return h(\n    'button',\n    { type: 'button',\n      'class': 'uppy-StatusBar-actionBtn uppy-StatusBar-actionBtn--retry',\n      'aria-label': props.i18n('retryUpload'),\n      onclick: props.retryAll },\n    props.i18n('retry')\n  );\n};\n\nvar ProgressBarProcessing = function ProgressBarProcessing(props) {\n  var value = Math.round(props.value * 100);\n\n  return h(\n    'div',\n    { 'class': 'uppy-StatusBar-content' },\n    props.mode === 'determinate' ? value + '%\\u30FB' : '',\n    props.message\n  );\n};\n\nvar ProgressBarUploading = function ProgressBarUploading(props) {\n  var i18n = props.i18n;\n\n  return h(\n    'div',\n    { 'class': 'uppy-StatusBar-content' },\n    props.isUploadStarted && !props.isAllComplete ? !props.isAllPaused ? h(\n      'div',\n      { title: 'Uploading' },\n      h(PauseResumeButtons, props),\n      ' ',\n      i18n('uploading'),\n      ' ',\n      h(ThrottledProgressDetails, props)\n    ) : h(\n      'div',\n      { title: 'Paused' },\n      h(PauseResumeButtons, props),\n      ' ',\n      i18n('paused'),\n      '\\u30FB',\n      props.totalProgress,\n      '%'\n    ) : null\n  );\n};\n\nvar ProgressBarComplete = function ProgressBarComplete(_ref) {\n  var totalProgress = _ref.totalProgress,\n      i18n = _ref.i18n;\n\n  return h(\n    'div',\n    { 'class': 'uppy-StatusBar-content', role: 'status' },\n    h(\n      'span',\n      { title: 'Complete' },\n      h(\n        'svg',\n        { 'aria-hidden': 'true', 'class': 'uppy-StatusBar-statusIndicator UppyIcon', width: '18', height: '17', viewBox: '0 0 23 17' },\n        h('path', { d: 'M8.944 17L0 7.865l2.555-2.61 6.39 6.525L20.41 0 23 2.645z' })\n      ),\n      i18n('uploadComplete'),\n      '\\u30FB',\n      totalProgress,\n      '%'\n    )\n  );\n};\n\nvar ProgressBarError = function ProgressBarError(_ref2) {\n  var error = _ref2.error,\n      retryAll = _ref2.retryAll,\n      i18n = _ref2.i18n;\n\n  return h(\n    'div',\n    { 'class': 'uppy-StatusBar-content', role: 'alert' },\n    h(\n      'strong',\n      null,\n      i18n('uploadFailed'),\n      '.'\n    ),\n    ' ',\n    h(\n      'span',\n      null,\n      i18n('pleasePressRetry')\n    ),\n    h(\n      'span',\n      { 'class': 'uppy-StatusBar-details',\n        'aria-label': error,\n        'data-microtip-position': 'top',\n        'data-microtip-size': 'large',\n        role: 'tooltip' },\n      '?'\n    )\n  );\n};\n\nvar PauseResumeButtons = function PauseResumeButtons(props) {\n  var resumableUploads = props.resumableUploads,\n      isAllPaused = props.isAllPaused,\n      i18n = props.i18n;\n\n  var title = resumableUploads ? isAllPaused ? i18n('resumeUpload') : i18n('pauseUpload') : i18n('cancelUpload');\n\n  return h(\n    'button',\n    { title: title, 'class': 'uppy-StatusBar-statusIndicator', type: 'button', onclick: function onclick() {\n        return togglePauseResume(props);\n      } },\n    resumableUploads ? isAllPaused ? h(\n      'svg',\n      { 'aria-hidden': 'true', 'class': 'UppyIcon', width: '15', height: '17', viewBox: '0 0 11 13' },\n      h('path', { d: 'M1.26 12.534a.67.67 0 0 1-.674.012.67.67 0 0 1-.336-.583v-11C.25.724.38.5.586.382a.658.658 0 0 1 .673.012l9.165 5.5a.66.66 0 0 1 .325.57.66.66 0 0 1-.325.573l-9.166 5.5z' })\n    ) : h(\n      'svg',\n      { 'aria-hidden': 'true', 'class': 'UppyIcon', width: '16', height: '17', viewBox: '0 0 12 13' },\n      h('path', { d: 'M4.888.81v11.38c0 .446-.324.81-.722.81H2.722C2.324 13 2 12.636 2 12.19V.81c0-.446.324-.81.722-.81h1.444c.398 0 .722.364.722.81zM9.888.81v11.38c0 .446-.324.81-.722.81H7.722C7.324 13 7 12.636 7 12.19V.81c0-.446.324-.81.722-.81h1.444c.398 0 .722.364.722.81z' })\n    ) : h(\n      'svg',\n      { 'aria-hidden': 'true', 'class': 'UppyIcon', width: '16px', height: '16px', viewBox: '0 0 19 19' },\n      h('path', { d: 'M17.318 17.232L9.94 9.854 9.586 9.5l-.354.354-7.378 7.378h.707l-.62-.62v.706L9.318 9.94l.354-.354-.354-.354L1.94 1.854v.707l.62-.62h-.706l7.378 7.378.354.354.354-.354 7.378-7.378h-.707l.622.62v-.706L9.854 9.232l-.354.354.354.354 7.378 7.378.708-.707-7.38-7.378v.708l7.38-7.38.353-.353-.353-.353-.622-.622-.353-.353-.354.352-7.378 7.38h.708L2.56 1.23 2.208.88l-.353.353-.622.62-.353.355.352.353 7.38 7.38v-.708l-7.38 7.38-.353.353.352.353.622.622.353.353.354-.353 7.38-7.38h-.708l7.38 7.38z' })\n    )\n  );\n};\n//# sourceMappingURL=StatusBar.js.map",null]}