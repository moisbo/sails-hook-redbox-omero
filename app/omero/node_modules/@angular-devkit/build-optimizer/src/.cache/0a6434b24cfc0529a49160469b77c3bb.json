{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/GoogleDrive/index.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/GoogleDrive/index.js","mtime":1521677673000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Plugin = require('../../core/Plugin');\nvar Provider = require('../Provider');\nvar View = require('../Provider/view');\n\nvar _require = require('preact'),\n    h = _require.h;\n\nmodule.exports = function (_Plugin) {\n  _inherits(GoogleDrive, _Plugin);\n\n  function GoogleDrive(uppy, opts) {\n    _classCallCheck(this, GoogleDrive);\n\n    var _this = _possibleConstructorReturn(this, _Plugin.call(this, uppy, opts));\n\n    _this.type = 'acquirer';\n    _this.id = _this.opts.id || 'GoogleDrive';\n    _this.title = 'Google Drive';\n    _this.icon = function () {\n      return h(\n        'svg',\n        { 'aria-hidden': 'true', 'class': 'UppyIcon UppyModalTab-icon', width: '28', height: '28', viewBox: '0 0 16 16' },\n        h('path', { d: 'M2.955 14.93l2.667-4.62H16l-2.667 4.62H2.955zm2.378-4.62l-2.666 4.62L0 10.31l5.19-8.99 2.666 4.62-2.523 4.37zm10.523-.25h-5.333l-5.19-8.99h5.334l5.19 8.99z' })\n      );\n    };\n\n    _this[_this.id] = new Provider(uppy, {\n      host: _this.opts.host,\n      provider: 'drive',\n      authProvider: 'google'\n    });\n\n    _this.files = [];\n\n    _this.onAuth = _this.onAuth.bind(_this);\n    _this.render = _this.render.bind(_this);\n\n    // set default options\n    var defaultOptions = {};\n\n    // merge default options with the ones set by user\n    _this.opts = _extends({}, defaultOptions, opts);\n    return _this;\n  }\n\n  GoogleDrive.prototype.install = function install() {\n    this.view = new View(this);\n    // Set default state for Google Drive\n    this.setPluginState({\n      authenticated: false,\n      files: [],\n      folders: [],\n      directories: [],\n      activeRow: -1,\n      filterInput: '',\n      isSearchVisible: false\n    });\n\n    var target = this.opts.target;\n    if (target) {\n      this.mount(target, this);\n    }\n  };\n\n  GoogleDrive.prototype.uninstall = function uninstall() {\n    this.view.tearDown();\n    this.unmount();\n  };\n\n  GoogleDrive.prototype.onAuth = function onAuth(authenticated) {\n    this.setPluginState({ authenticated: authenticated });\n    if (authenticated) {\n      this.view.getFolder('root');\n    }\n  };\n\n  GoogleDrive.prototype.isFolder = function isFolder(item) {\n    return item.mimeType === 'application/vnd.google-apps.folder';\n  };\n\n  GoogleDrive.prototype.getItemData = function getItemData(item) {\n    return _extends({}, item, { size: parseFloat(item.fileSize) });\n  };\n\n  GoogleDrive.prototype.getItemIcon = function getItemIcon(item) {\n    return h('img', { src: item.iconLink });\n  };\n\n  GoogleDrive.prototype.getItemSubList = function getItemSubList(item) {\n    var _this2 = this;\n\n    return item.items.filter(function (i) {\n      return _this2.isFolder(i) || !i.mimeType.startsWith('application/vnd.google');\n    });\n  };\n\n  GoogleDrive.prototype.getItemName = function getItemName(item) {\n    return item.title ? item.title : '/';\n  };\n\n  GoogleDrive.prototype.getMimeType = function getMimeType(item) {\n    return item.mimeType;\n  };\n\n  GoogleDrive.prototype.getItemId = function getItemId(item) {\n    return item.id;\n  };\n\n  GoogleDrive.prototype.getItemRequestPath = function getItemRequestPath(item) {\n    return this.getItemId(item);\n  };\n\n  GoogleDrive.prototype.getItemModifiedDate = function getItemModifiedDate(item) {\n    return item.modifiedByMeDate;\n  };\n\n  GoogleDrive.prototype.getItemThumbnailUrl = function getItemThumbnailUrl(item) {\n    return this.opts.host + '/' + this.GoogleDrive.id + '/thumbnail/' + this.getItemRequestPath(item);\n  };\n\n  GoogleDrive.prototype.render = function render(state) {\n    return this.view.render(state);\n  };\n\n  return GoogleDrive;\n}(Plugin);\n//# sourceMappingURL=index.js.map",null]}