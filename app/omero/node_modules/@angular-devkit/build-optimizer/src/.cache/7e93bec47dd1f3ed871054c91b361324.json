{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@asymmetrik/ngx-leaflet/dist/leaflet/layers/control/leaflet-control-layers.wrapper.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@asymmetrik/ngx-leaflet/dist/leaflet/layers/control/leaflet-control-layers.wrapper.js","mtime":1514563379000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { control } from 'leaflet';\nimport { LeafletControlLayersChanges } from './leaflet-control-layers-changes.model';\nvar LeafletControlLayersWrapper = /*@__PURE__*/ (function () {\n    function LeafletControlLayersWrapper(zone) {\n        this.zone = zone;\n    }\n    LeafletControlLayersWrapper.prototype.getLayersControl = function () {\n        return this.layersControl;\n    };\n    LeafletControlLayersWrapper.prototype.init = function (controlConfig, controlOptions) {\n        var _this = this;\n        var baseLayers = controlConfig.baseLayers || {};\n        var overlays = controlConfig.overlays || {};\n        this.zone.runOutsideAngular(function () {\n            _this.layersControl = control.layers(baseLayers, overlays, controlOptions);\n        });\n        return this.layersControl;\n    };\n    LeafletControlLayersWrapper.prototype.applyBaseLayerChanges = function (changes) {\n        var results = new LeafletControlLayersChanges();\n        if (null != this.layersControl) {\n            results = this.applyChanges(changes, this.layersControl.addBaseLayer);\n        }\n        return results;\n    };\n    LeafletControlLayersWrapper.prototype.applyOverlayChanges = function (changes) {\n        var results = new LeafletControlLayersChanges();\n        if (null != this.layersControl) {\n            results = this.applyChanges(changes, this.layersControl.addOverlay);\n        }\n        return results;\n    };\n    LeafletControlLayersWrapper.prototype.applyChanges = function (changes, addFn) {\n        var _this = this;\n        var results = new LeafletControlLayersChanges();\n        if (null != changes) {\n            changes.forEachChangedItem(function (c) {\n                _this.layersControl.removeLayer(c.previousValue);\n                addFn.call(_this.layersControl, c.currentValue, c.key);\n                results.layersChanged++;\n            });\n            changes.forEachRemovedItem(function (c) {\n                _this.layersControl.removeLayer(c.previousValue);\n                results.layersRemoved++;\n            });\n            changes.forEachAddedItem(function (c) {\n                addFn.call(_this.layersControl, c.currentValue, c.key);\n                results.layersAdded++;\n            });\n        }\n        return results;\n    };\n    return LeafletControlLayersWrapper;\n}());\nexport { LeafletControlLayersWrapper };\n//# sourceMappingURL=leaflet-control-layers.wrapper.js.map \n",null]}