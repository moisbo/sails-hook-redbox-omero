{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Webcam/CameraScreen.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Webcam/CameraScreen.js","mtime":1521677676000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _require = require('preact'),\n    h = _require.h,\n    Component = _require.Component;\n\nvar SnapshotButton = require('./SnapshotButton');\nvar RecordButton = require('./RecordButton');\n\nfunction isModeAvailable(modes, mode) {\n  return modes.indexOf(mode) !== -1;\n}\n\nvar CameraScreen = function (_Component) {\n  _inherits(CameraScreen, _Component);\n\n  function CameraScreen() {\n    _classCallCheck(this, CameraScreen);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  CameraScreen.prototype.componentDidMount = function componentDidMount() {\n    this.props.onFocus();\n    this.btnContainer.firstChild.focus();\n  };\n\n  CameraScreen.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.props.onStop();\n  };\n\n  CameraScreen.prototype.render = function render() {\n    var _this2 = this;\n\n    var shouldShowRecordButton = this.props.supportsRecording && (isModeAvailable(this.props.modes, 'video-only') || isModeAvailable(this.props.modes, 'audio-only') || isModeAvailable(this.props.modes, 'video-audio'));\n    var shouldShowSnapshotButton = isModeAvailable(this.props.modes, 'picture');\n\n    return h(\n      'div',\n      { 'class': 'uppy uppy-Webcam-container' },\n      h(\n        'div',\n        { 'class': 'uppy-Webcam-videoContainer' },\n        h('video', { 'class': 'uppy-Webcam-video  ' + (this.props.mirror ? 'uppy-Webcam-video--mirrored' : ''), autoplay: true, muted: true, playsinline: true, srcObject: this.props.src || '' })\n      ),\n      h(\n        'div',\n        { 'class': 'uppy-Webcam-buttonContainer', ref: function ref(el) {\n            _this2.btnContainer = el;\n          } },\n        shouldShowSnapshotButton ? SnapshotButton(this.props) : null,\n        ' ',\n        shouldShowRecordButton ? RecordButton(this.props) : null\n      )\n    );\n  };\n\n  return CameraScreen;\n}(Component);\n\nmodule.exports = CameraScreen;\n//# sourceMappingURL=CameraScreen.js.map",null]}