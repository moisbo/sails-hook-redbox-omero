{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/ng2-tree/src/editable/node-editable.directive.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/ng2-tree/src/editable/node-editable.directive.js","mtime":1528354008000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar core_1 = require('@angular/core');\nvar editable_events_1 = require('./editable.events');\nvar NodeEditableDirective = (function () {\n    function NodeEditableDirective(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        /* tslint:enable:no-input-rename */\n        this.valueChanged = new core_1.EventEmitter(false);\n    }\n    NodeEditableDirective.prototype.ngOnInit = function () {\n        var nativeElement = this.elementRef.nativeElement;\n        if (nativeElement) {\n            nativeElement.focus();\n        }\n        this.renderer.setProperty(nativeElement, 'value', this.nodeValue);\n    };\n    NodeEditableDirective.prototype.applyNewValue = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'keyup', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.applyNewValueByLoosingFocus = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'blur', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.cancelEditing = function () {\n        this.valueChanged.emit({\n            type: 'keyup',\n            value: this.nodeValue,\n            action: editable_events_1.NodeEditableEventAction.Cancel\n        });\n    };\n    NodeEditableDirective.decorators = [\n        {\n            type: core_1.Directive,\n            args: [\n                {\n                    selector: '[nodeEditable]'\n                }\n            ]\n        }\n    ];\n    NodeEditableDirective.propDecorators = {\n        nodeValue: [{ type: core_1.Input, args: ['nodeEditable'] }],\n        valueChanged: [{ type: core_1.Output }],\n        applyNewValue: [{ type: core_1.HostListener, args: ['keyup.enter', ['$event.target.value']] }],\n        applyNewValueByLoosingFocus: [{ type: core_1.HostListener, args: ['blur', ['$event.target.value']] }],\n        cancelEditing: [{ type: core_1.HostListener, args: ['keyup.esc'] }]\n    };\n    return NodeEditableDirective;\n})();\nexports.NodeEditableDirective = NodeEditableDirective;\n",null]}