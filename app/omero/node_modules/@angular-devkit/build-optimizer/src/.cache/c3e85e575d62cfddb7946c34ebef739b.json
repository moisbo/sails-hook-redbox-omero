{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Dashboard/FileItem.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Dashboard/FileItem.js","mtime":1521677671000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var _require = require('../../core/Utils'),\n    getETA = _require.getETA,\n    getSpeed = _require.getSpeed,\n    prettyETA = _require.prettyETA,\n    getFileNameAndExtension = _require.getFileNameAndExtension,\n    truncateString = _require.truncateString,\n    copyToClipboard = _require.copyToClipboard;\n\nvar prettyBytes = require('prettier-bytes');\nvar FileItemProgress = require('./FileItemProgress');\nvar getFileTypeIcon = require('./getFileTypeIcon');\n\nvar _require2 = require('./icons'),\n    iconEdit = _require2.iconEdit,\n    iconCopy = _require2.iconCopy,\n    iconRetry = _require2.iconRetry;\n\nvar classNames = require('classnames');\n\nvar _require3 = require('preact'),\n    h = _require3.h;\n\nmodule.exports = function fileItem(props) {\n  var file = props.file;\n  var acquirers = props.acquirers;\n\n  var isProcessing = file.progress.preprocess || file.progress.postprocess;\n  var isUploaded = file.progress.uploadComplete && !isProcessing && !file.error;\n  var uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing;\n  var uploadInProgress = file.progress.uploadStarted && !file.progress.uploadComplete || isProcessing;\n  var isPaused = file.isPaused || false;\n  var error = file.error || false;\n\n  var fileName = getFileNameAndExtension(file.meta.name).name;\n  var truncatedFileName = props.isWide ? truncateString(fileName, 14) : fileName;\n\n  var onPauseResumeCancelRetry = function onPauseResumeCancelRetry(ev) {\n    if (isUploaded) return;\n    if (error) {\n      props.retryUpload(file.id);\n      return;\n    }\n    if (props.resumableUploads) {\n      props.pauseUpload(file.id);\n    } else {\n      props.cancelUpload(file.id);\n    }\n  };\n\n  var dashboardItemClass = classNames('uppy-DashboardItem', { 'is-inprogress': uploadInProgress }, { 'is-processing': isProcessing }, { 'is-complete': isUploaded }, { 'is-paused': isPaused }, { 'is-error': error }, { 'is-resumable': props.resumableUploads });\n\n  return h(\n    'li',\n    { 'class': dashboardItemClass, id: 'uppy_' + file.id, title: file.meta.name },\n    h(\n      'div',\n      { 'class': 'uppy-DashboardItem-preview' },\n      h(\n        'div',\n        { 'class': 'uppy-DashboardItem-previewInnerWrap', style: { backgroundColor: getFileTypeIcon(file.type).color } },\n        file.preview ? h('img', { alt: file.name, src: file.preview }) : h(\n          'div',\n          { 'class': 'uppy-DashboardItem-previewIconWrap' },\n          h(\n            'span',\n            { 'class': 'uppy-DashboardItem-previewIcon', style: { color: getFileTypeIcon(file.type).color } },\n            getFileTypeIcon(file.type).icon\n          ),\n          h(\n            'svg',\n            { 'class': 'uppy-DashboardItem-previewIconBg', width: '72', height: '93', viewBox: '0 0 72 93' },\n            h(\n              'g',\n              null,\n              h('path', { d: 'M24.08 5h38.922A2.997 2.997 0 0 1 66 8.003v74.994A2.997 2.997 0 0 1 63.004 86H8.996A2.998 2.998 0 0 1 6 83.01V22.234L24.08 5z', fill: '#FFF' }),\n              h('path', { d: 'M24 5L6 22.248h15.007A2.995 2.995 0 0 0 24 19.244V5z', fill: '#E4E4E4' })\n            )\n          )\n        )\n      ),\n      h(\n        'div',\n        { 'class': 'uppy-DashboardItem-progress' },\n        isUploaded ? h(\n          'div',\n          { 'class': 'uppy-DashboardItem-progressIndicator' },\n          FileItemProgress({\n            progress: file.progress.percentage,\n            fileID: file.id\n          })\n        ) : h(\n          'button',\n          { 'class': 'uppy-DashboardItem-progressIndicator',\n            type: 'button',\n            title: isUploaded ? 'upload complete' : props.resumableUploads ? file.isPaused ? 'resume upload' : 'pause upload' : error ? 'retry upload' : 'cancel upload',\n            onclick: onPauseResumeCancelRetry },\n          error ? iconRetry() : FileItemProgress({\n            progress: file.progress.percentage,\n            fileID: file.id\n          })\n        ),\n        props.showProgressDetails && h(\n          'div',\n          { 'class': 'uppy-DashboardItem-progressInfo',\n            title: props.i18n('fileProgress'),\n            'aria-label': props.i18n('fileProgress') },\n          !file.isPaused && !isUploaded && h(\n            'span',\n            null,\n            prettyETA(getETA(file.progress)),\n            ' \\u30FB \\u2191 ',\n            prettyBytes(getSpeed(file.progress)),\n            '/s'\n          )\n        )\n      )\n    ),\n    h(\n      'div',\n      { 'class': 'uppy-DashboardItem-info' },\n      h(\n        'h4',\n        { 'class': 'uppy-DashboardItem-name', title: fileName },\n        file.uploadURL ? h(\n          'a',\n          { href: file.uploadURL, target: '_blank' },\n          file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName\n        ) : file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName\n      ),\n      h(\n        'div',\n        { 'class': 'uppy-DashboardItem-status' },\n        file.data.size && h(\n          'div',\n          { 'class': 'uppy-DashboardItem-statusSize' },\n          prettyBytes(file.data.size)\n        ),\n        file.source && h(\n          'div',\n          { 'class': 'uppy-DashboardItem-sourceIcon' },\n          acquirers.map(function (acquirer) {\n            if (acquirer.id === file.source) return h(\n              'span',\n              { title: props.i18n('fileSource') + ': ' + acquirer.name },\n              acquirer.icon()\n            );\n          })\n        )\n      ),\n      !uploadInProgressOrComplete && h(\n        'button',\n        { 'class': 'uppy-DashboardItem-edit',\n          type: 'button',\n          'aria-label': props.i18n('editFile'),\n          title: props.i18n('editFile'),\n          onclick: function onclick(e) {\n            return props.showFileCard(file.id);\n          } },\n        iconEdit()\n      ),\n      file.uploadURL && h(\n        'button',\n        { 'class': 'uppy-DashboardItem-copyLink',\n          type: 'button',\n          'aria-label': props.i18n('copyLink'),\n          title: props.i18n('copyLink'),\n          onclick: function onclick() {\n            copyToClipboard(file.uploadURL, props.i18n('copyLinkToClipboardFallback')).then(function () {\n              props.log('Link copied to clipboard.');\n              props.info(props.i18n('copyLinkToClipboardSuccess'), 'info', 3000);\n            }).catch(props.log);\n          } },\n        iconCopy()\n      )\n    ),\n    h(\n      'div',\n      { 'class': 'uppy-DashboardItem-action' },\n      !isUploaded && h(\n        'button',\n        { 'class': 'uppy-DashboardItem-remove',\n          type: 'button',\n          'aria-label': props.i18n('removeFile'),\n          title: props.i18n('removeFile'),\n          onclick: function onclick() {\n            return props.removeFile(file.id);\n          } },\n        h(\n          'svg',\n          { 'aria-hidden': 'true', 'class': 'UppyIcon', width: '60', height: '60', viewBox: '0 0 60 60', xmlns: 'http://www.w3.org/2000/svg' },\n          h('path', { stroke: '#FFF', 'stroke-width': '1', 'fill-rule': 'nonzero', 'vector-effect': 'non-scaling-stroke', d: 'M30 1C14 1 1 14 1 30s13 29 29 29 29-13 29-29S46 1 30 1z' }),\n          h('path', { fill: '#FFF', 'vector-effect': 'non-scaling-stroke', d: 'M42 39.667L39.667 42 30 32.333 20.333 42 18 39.667 27.667 30 18 20.333 20.333 18 30 27.667 39.667 18 42 20.333 32.333 30z' })\n        )\n      )\n    )\n  );\n};\n//# sourceMappingURL=FileItem.js.map",null]}