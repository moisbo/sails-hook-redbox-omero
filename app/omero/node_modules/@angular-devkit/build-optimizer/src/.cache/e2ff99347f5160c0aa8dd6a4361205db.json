{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/ng2-tree/src/tree.component.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/ng2-tree/src/tree.component.js","mtime":1528354008000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar core_1 = require('@angular/core');\nvar tree_service_1 = require('./tree.service');\nvar tree_1 = require('./tree');\nvar TreeComponent = (function () {\n    function TreeComponent(treeService) {\n        this.treeService = treeService;\n        this.nodeCreated = new core_1.EventEmitter();\n        this.nodeRemoved = new core_1.EventEmitter();\n        this.nodeRenamed = new core_1.EventEmitter();\n        this.nodeSelected = new core_1.EventEmitter();\n        this.nodeUnselected = new core_1.EventEmitter();\n        this.nodeMoved = new core_1.EventEmitter();\n        this.nodeExpanded = new core_1.EventEmitter();\n        this.nodeCollapsed = new core_1.EventEmitter();\n        this.loadNextLevel = new core_1.EventEmitter();\n        this.nodeChecked = new core_1.EventEmitter();\n        this.nodeUnchecked = new core_1.EventEmitter();\n        this.treeControllerCreated = new core_1.EventEmitter();\n        this.menuItemSelected = new core_1.EventEmitter();\n        this.subscriptions = [];\n    }\n    TreeComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.treeModel) {\n            this.tree = TreeComponent.EMPTY_TREE;\n        }\n        else {\n            this.tree = new tree_1.Tree(this.treeModel);\n        }\n    };\n    TreeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.rootComponent['treeControllerCreatedFunction'] = this.internalTreeControllerCreated.bind(this);\n        this.subscriptions.push(this.treeService.nodeRemoved$.subscribe(function (e) {\n            _this.nodeRemoved.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeRenamed$.subscribe(function (e) {\n            _this.nodeRenamed.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeCreated$.subscribe(function (e) {\n            _this.nodeCreated.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeSelected$.subscribe(function (e) {\n            _this.nodeSelected.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeUnselected$.subscribe(function (e) {\n            _this.nodeUnselected.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeMoved$.subscribe(function (e) {\n            _this.nodeMoved.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeExpanded$.subscribe(function (e) {\n            _this.nodeExpanded.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeCollapsed$.subscribe(function (e) {\n            _this.nodeCollapsed.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.menuItemSelected$.subscribe(function (e) {\n            _this.menuItemSelected.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.loadNextLevel$.subscribe(function (e) {\n            _this.loadNextLevel.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeChecked$.subscribe(function (e) {\n            _this.nodeChecked.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeUnchecked$.subscribe(function (e) {\n            _this.nodeUnchecked.emit(e);\n        }));\n    };\n    TreeComponent.prototype.getController = function () {\n        return this.rootComponent.controller;\n    };\n    TreeComponent.prototype.getControllerByNodeId = function (id) {\n        return this.treeService.getController(id);\n    };\n    TreeComponent.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (sub) {\n            return sub && sub.unsubscribe();\n        });\n    };\n    TreeComponent.prototype.internalTreeControllerCreated = function (controllerInfo) {\n        this.treeControllerCreated.emit(controllerInfo);\n    };\n    TreeComponent.EMPTY_TREE = new tree_1.Tree({ value: '' });\n    TreeComponent.decorators = [\n        {\n            type: core_1.Component,\n            args: [\n                {\n                    selector: 'tree',\n                    template: '<tree-internal #rootComponent [tree]=\"tree\" [settings]=\"settings\" [template]=\"template\"></tree-internal>',\n                    providers: [tree_service_1.TreeService]\n                }\n            ]\n        }\n    ];\n    TreeComponent.propDecorators = {\n        treeModel: [{ type: core_1.Input, args: ['tree'] }],\n        settings: [{ type: core_1.Input }],\n        nodeCreated: [{ type: core_1.Output }],\n        nodeRemoved: [{ type: core_1.Output }],\n        nodeRenamed: [{ type: core_1.Output }],\n        nodeSelected: [{ type: core_1.Output }],\n        nodeUnselected: [{ type: core_1.Output }],\n        nodeMoved: [{ type: core_1.Output }],\n        nodeExpanded: [{ type: core_1.Output }],\n        nodeCollapsed: [{ type: core_1.Output }],\n        loadNextLevel: [{ type: core_1.Output }],\n        nodeChecked: [{ type: core_1.Output }],\n        nodeUnchecked: [{ type: core_1.Output }],\n        treeControllerCreated: [{ type: core_1.Output }],\n        menuItemSelected: [{ type: core_1.Output }],\n        rootComponent: [{ type: core_1.ViewChild, args: ['rootComponent'] }],\n        template: [{ type: core_1.ContentChild, args: [core_1.TemplateRef] }]\n    };\n    return TreeComponent;\n})();\nexports.TreeComponent = TreeComponent;\n",null]}