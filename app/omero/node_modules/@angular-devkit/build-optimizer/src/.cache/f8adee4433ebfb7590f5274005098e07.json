{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/DragDrop/index.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/DragDrop/index.js","mtime":1521677672000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Plugin = require('../../core/Plugin');\nvar Translator = require('../../core/Translator');\n\nvar _require = require('../../core/Utils'),\n    toArray = _require.toArray;\n\nvar dragDrop = require('drag-drop');\n\nvar _require2 = require('preact'),\n    h = _require2.h;\n\n/**\n * Drag & Drop plugin\n *\n */\n\n\nmodule.exports = function (_Plugin) {\n  _inherits(DragDrop, _Plugin);\n\n  function DragDrop(uppy, opts) {\n    _classCallCheck(this, DragDrop);\n\n    var _this = _possibleConstructorReturn(this, _Plugin.call(this, uppy, opts));\n\n    _this.type = 'acquirer';\n    _this.id = _this.opts.id || 'DragDrop';\n    _this.title = 'Drag & Drop';\n\n    var defaultLocale = {\n      strings: {\n        dropHereOr: 'Drop files here or',\n        browse: 'browse'\n      }\n\n      // Default options\n    };var defaultOpts = {\n      target: null,\n      width: '100%',\n      height: '100%',\n      note: '',\n      locale: defaultLocale\n\n      // Merge default options with the ones set by user\n    };_this.opts = _extends({}, defaultOpts, opts);\n\n    // Check for browser dragDrop support\n    _this.isDragDropSupported = _this.checkDragDropSupport();\n\n    _this.locale = _extends({}, defaultLocale, _this.opts.locale);\n    _this.locale.strings = _extends({}, defaultLocale.strings, _this.opts.locale.strings);\n\n    // i18n\n    _this.translator = new Translator({ locale: _this.locale });\n    _this.i18n = _this.translator.translate.bind(_this.translator);\n\n    // Bind `this` to class methods\n    _this.handleDrop = _this.handleDrop.bind(_this);\n    _this.handleBrowseClick = _this.handleBrowseClick.bind(_this);\n    _this.handleInputChange = _this.handleInputChange.bind(_this);\n    _this.checkDragDropSupport = _this.checkDragDropSupport.bind(_this);\n    _this.render = _this.render.bind(_this);\n    return _this;\n  }\n\n  /**\n   * Checks if the browser supports Drag & Drop (not supported on mobile devices, for example).\n   * @return {Boolean}\n   */\n\n\n  DragDrop.prototype.checkDragDropSupport = function checkDragDropSupport() {\n    var div = document.createElement('div');\n\n    if (!('draggable' in div) || !('ondragstart' in div && 'ondrop' in div)) {\n      return false;\n    }\n\n    if (!('FormData' in window)) {\n      return false;\n    }\n\n    if (!('FileReader' in window)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  DragDrop.prototype.handleDrop = function handleDrop(files) {\n    var _this2 = this;\n\n    this.uppy.log('[DragDrop] Files dropped');\n\n    files.forEach(function (file) {\n      _this2.uppy.addFile({\n        source: _this2.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      }).catch(function () {\n        // Ignore\n      });\n    });\n  };\n\n  DragDrop.prototype.handleInputChange = function handleInputChange(ev) {\n    var _this3 = this;\n\n    this.uppy.log('[DragDrop] Files selected through input');\n\n    var files = toArray(ev.target.files);\n\n    files.forEach(function (file) {\n      _this3.uppy.addFile({\n        source: _this3.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      }).catch(function () {\n        // Ignore\n      });\n    });\n  };\n\n  DragDrop.prototype.handleBrowseClick = function handleBrowseClick(ev) {\n    ev.stopPropagation();\n    this.input.click();\n  };\n\n  DragDrop.prototype.render = function render(state) {\n    var _this4 = this;\n\n    var DragDropClass = 'uppy uppy-DragDrop-container ' + (this.isDragDropSupported ? 'is-dragdrop-supported' : '');\n    var DragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\n      'div',\n      { 'class': DragDropClass, style: DragDropStyle },\n      h(\n        'div',\n        { 'class': 'uppy-DragDrop-inner' },\n        h(\n          'svg',\n          { 'aria-hidden': 'true', 'class': 'UppyIcon uppy-DragDrop-arrow', width: '16', height: '16', viewBox: '0 0 16 16', xmlns: 'http://www.w3.org/2000/svg' },\n          h('path', { d: 'M11 10V0H5v10H2l6 6 6-6h-3zm0 0', 'fill-rule': 'evenodd' })\n        ),\n        h('input', { 'class': 'uppy-DragDrop-input',\n          type: 'file',\n          name: 'files[]',\n          multiple: 'true',\n          ref: function ref(input) {\n            _this4.input = input;\n          },\n          onchange: this.handleInputChange }),\n        h(\n          'label',\n          { 'class': 'uppy-DragDrop-label', onclick: this.handleBrowseClick },\n          this.i18n('dropHereOr'),\n          ' ',\n          h(\n            'span',\n            { 'class': 'uppy-DragDrop-dragText' },\n            this.i18n('browse')\n          )\n        ),\n        h(\n          'span',\n          { 'class': 'uppy-DragDrop-note' },\n          this.opts.note\n        )\n      )\n    );\n  };\n\n  DragDrop.prototype.install = function install() {\n    var _this5 = this;\n\n    var target = this.opts.target;\n    if (target) {\n      this.mount(target, this);\n    }\n    this.removeDragDropListener = dragDrop(this.el, function (files) {\n      _this5.handleDrop(files);\n      _this5.uppy.log(files);\n    });\n  };\n\n  DragDrop.prototype.uninstall = function uninstall() {\n    this.unmount();\n    this.removeDragDropListener();\n  };\n\n  return DragDrop;\n}(Plugin);\n//# sourceMappingURL=index.js.map",null]}