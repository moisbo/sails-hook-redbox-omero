{"remainingRequest":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Provider/index.js","dependencies":[{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/uppy/lib/plugins/Provider/index.js","mtime":1521677673000},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/cache-loader/dist/cjs.js","mtime":1528352013145},{"path":"/Users/moises/source/code.research/sails-hook-redbox-omero/app/omero/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nrequire('whatwg-fetch');\n\nvar _getName = function _getName(id) {\n  return id.split('-').map(function (s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }).join(' ');\n};\n\nmodule.exports = function () {\n  function Provider(uppy, opts) {\n    _classCallCheck(this, Provider);\n\n    this.uppy = uppy;\n    this.opts = opts;\n    this.provider = opts.provider;\n    this.id = this.provider;\n    this.authProvider = opts.authProvider || this.provider;\n    this.name = this.opts.name || _getName(this.id);\n\n    this.onReceiveResponse = this.onReceiveResponse.bind(this);\n  }\n\n  Provider.prototype.onReceiveResponse = function onReceiveResponse(response) {\n    var uppyServer = this.uppy.state.uppyServer || {};\n    var host = this.opts.host;\n    var headers = response.headers;\n    // Store the self-identified domain name for the uppy-server we just hit.\n    if (headers.has('i-am') && headers.get('i-am') !== uppyServer[host]) {\n      var _extends2;\n\n      this.uppy.setState({\n        uppyServer: _extends({}, uppyServer, (_extends2 = {}, _extends2[host] = headers.get('i-am'), _extends2))\n      });\n    }\n    return response;\n  };\n\n  Provider.prototype.checkAuth = function checkAuth() {\n    return fetch(this.hostname + '/' + this.id + '/authorized', {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(this.onReceiveResponse).then(function (res) {\n      return res.json().then(function (payload) {\n        return payload.authenticated;\n      });\n    });\n  };\n\n  Provider.prototype.authUrl = function authUrl() {\n    return this.hostname + '/' + this.id + '/connect';\n  };\n\n  Provider.prototype.fileUrl = function fileUrl(id) {\n    return this.hostname + '/' + this.id + '/get/' + id;\n  };\n\n  Provider.prototype.list = function list(directory) {\n    return fetch(this.hostname + '/' + this.id + '/list/' + (directory || ''), {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(this.onReceiveResponse).then(function (res) {\n      return res.json();\n    });\n  };\n\n  Provider.prototype.logout = function logout() {\n    var redirect = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : location.href;\n\n    return fetch(this.hostname + '/' + this.id + '/logout?redirect=' + redirect, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  _createClass(Provider, [{\n    key: 'hostname',\n    get: function get() {\n      var uppyServer = this.uppy.state.uppyServer || {};\n      var host = this.opts.host;\n      return uppyServer[host] || host;\n    }\n  }]);\n\n  return Provider;\n}();\n//# sourceMappingURL=index.js.map",null]}